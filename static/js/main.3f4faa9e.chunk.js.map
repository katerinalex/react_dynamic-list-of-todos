{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","openModal","openedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","statusFilter","onChangeFilter","input","onChangeInput","clearInput","value","onChange","placeholder","style","pointerEvents","Loader","TodoModal","isDataLoad","closeModal","href","user","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","a","todosFromServer","userFromServer","App","useState","isOpenedModal","setIsOpenedModal","phone","openedTodo","setOpenedTodo","setIsDataLoaded","isUserLoad","setIsUserLoaded","setOpenedTodoId","setTodos","todosServer","setTodosServer","setStatusFilter","setInput","filterTodos","filter","inputNew","toLowerCase","includes","useEffect","loadTodos","event","target","preventDefault","loadUserForTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f4faa9e.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos:Todo[],\n  openModal: (todo: Todo) => void,\n  openedTodoId:number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  openModal,\n  openedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={(openedTodoId === todo.id)\n            ? 'has-background-info-light'\n            : ''}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => openModal(todo)}\n            >\n              <span className=\"icon\">\n                {openedTodoId === todo.id\n                  ? <i className=\"far fa-eye-slash\" />\n                  : <i className=\"far fa-eye\" />}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onChangeFilter: (event:React.ChangeEvent<HTMLSelectElement>) => void,\n  statusFilter:string,\n  input:string,\n  onChangeInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  clearInput: (event: React.MouseEvent<HTMLButtonElement>) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  statusFilter,\n  onChangeFilter,\n  input,\n  onChangeInput,\n  clearInput,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={statusFilter}\n          onChange={onChangeFilter}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={input}\n        onChange={onChangeInput}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={clearInput}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype TodoWithUser = {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user: User,\n};\n\ntype Props = {\n  todo:TodoWithUser,\n  isDataLoad:boolean,\n  closeModal:() => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  isDataLoad,\n  closeModal,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!isDataLoad) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${todo.user.email}`}>\n                {todo.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\ntype TodoWithUser = {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user: User,\n};\n\nasync function loadTodos() {\n  const todosFromServer = await getTodos();\n\n  return todosFromServer;\n}\n\nasync function loadUserForTodo(todo:Todo) {\n  const userFromServer = await getUser(todo.userId);\n\n  return userFromServer;\n}\n\nexport const App: React.FC = () => {\n  const [isOpenedModal, setIsOpenedModal] = useState(false);\n  const [openedTodo, setOpenedTodo] = useState<TodoWithUser>(\n    {\n      userId: 1,\n      id: 1,\n      title: 'delectus aut autem',\n      completed: false,\n      user: {\n        id: 1,\n        name: 'Leanne Graham',\n        email: 'Sincere@april.biz',\n        phone: '1-770-736-8031 x56442',\n      },\n    },\n  );\n  const [isDataLoad, setIsDataLoaded] = useState(false);\n  const [isUserLoad, setIsUserLoaded] = useState(false);\n  const [openedTodoId, setOpenedTodoId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosServer, setTodosServer] = useState<Todo[]>([]);\n  const openModal = (todo:Todo) => {\n    setIsOpenedModal(true);\n    loadUserForTodo(todo).then(res => {\n      setOpenedTodo({\n        ...todo,\n        user: res,\n      });\n      setOpenedTodoId(todo.id);\n      setIsUserLoaded(true);\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenedModal(false);\n    setOpenedTodoId(0);\n  };\n\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [input, setInput] = useState('');\n\n  const filterTodos = (filter:string, inputNew:string) => {\n    switch (filter) {\n      case 'active':\n        setTodos(todosServer.filter(todo => todo.completed === false && (todo.title.toLowerCase().includes(inputNew.toLowerCase()))));\n        break;\n      case 'completed':\n        setTodos(todosServer.filter(todo => todo.completed === true && (todo.title.toLowerCase().includes(inputNew.toLowerCase()))));\n        break;\n\n      default:\n        setTodos(todosServer.filter(\n          todo => todo.title.toLowerCase().includes(inputNew.toLowerCase()),\n        ));\n        break;\n    }\n  };\n\n  const onChangeFilter = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusFilter(event.target.value);\n    filterTodos(event.target.value, input);\n  };\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n    filterTodos(statusFilter, event.target.value);\n  };\n\n  const clearInput = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setInput('');\n    filterTodos(statusFilter, '');\n  };\n\n  useEffect(() => {\n    loadTodos().then(res => {\n      setTodos(res);\n      setTodosServer(res);\n      setIsDataLoaded(true);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onChangeFilter={onChangeFilter} statusFilter={statusFilter} input={input} onChangeInput={onChangeInput} clearInput={clearInput} />\n            </div>\n\n            <div className=\"block\">\n              {isDataLoad\n                ? <TodoList todos={todos} openModal={openModal} openedTodoId={openedTodoId} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenedModal && <TodoModal todo={openedTodo} isDataLoad={isUserLoad} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}